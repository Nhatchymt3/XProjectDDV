// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XProject.Repository.Infrastructure;

namespace XProject.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220509062816_init3")]
    partial class init3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("XProject.Contract.Repository.Models.TD_CUSTOMER_INFO", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Customer_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("File_Sharing_ID")
                        .HasColumnType("int");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("TD_SHARING_INFOId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("TD_SHARING_INFOId");

                    b.ToTable("TD_CUSTOMER_INFO");
                });

            modelBuilder.Entity("XProject.Contract.Repository.Models.TD_FILE_INFO", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("File_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("File_Sharing_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("File_Size")
                        .HasColumnType("int");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("TD_SHARING_INFOId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Upload_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TD_SHARING_INFOId");

                    b.ToTable("TD_FILE_INFO");
                });

            modelBuilder.Entity("XProject.Contract.Repository.Models.TD_SHARING_INFO", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("Create_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("Expiration_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Mode_code")
                        .HasColumnType("int");

                    b.Property<string>("customer_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer_password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dd_member_account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("delete_flag")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TD_SHARING_INFO");
                });

            modelBuilder.Entity("XProject.Contract.Repository.Models.TM_DD_MEMBER", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("LastUpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("LimmitedDays")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Permission")
                        .HasColumnType("int");

                    b.Property<string>("Pw")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TD_SHARING_INFOId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("TD_SHARING_INFOId");

                    b.ToTable("TM_DD_MEMBER");
                });

            modelBuilder.Entity("XProject.Contract.Repository.Models.TD_CUSTOMER_INFO", b =>
                {
                    b.HasOne("XProject.Contract.Repository.Models.TD_SHARING_INFO", null)
                        .WithMany("TD_CUSTOMER_INFOs")
                        .HasForeignKey("TD_SHARING_INFOId");
                });

            modelBuilder.Entity("XProject.Contract.Repository.Models.TD_FILE_INFO", b =>
                {
                    b.HasOne("XProject.Contract.Repository.Models.TD_SHARING_INFO", null)
                        .WithMany("TD_FILE_INFOs")
                        .HasForeignKey("TD_SHARING_INFOId");
                });

            modelBuilder.Entity("XProject.Contract.Repository.Models.TM_DD_MEMBER", b =>
                {
                    b.HasOne("XProject.Contract.Repository.Models.TD_SHARING_INFO", null)
                        .WithMany("TM_DD_MEMBERs")
                        .HasForeignKey("TD_SHARING_INFOId");
                });

            modelBuilder.Entity("XProject.Contract.Repository.Models.TD_SHARING_INFO", b =>
                {
                    b.Navigation("TD_CUSTOMER_INFOs");

                    b.Navigation("TD_FILE_INFOs");

                    b.Navigation("TM_DD_MEMBERs");
                });
#pragma warning restore 612, 618
        }
    }
}
